#ifndef _JSP_STRING_UTIL_H_
#define _JSP_STRING_UTIL_H_

#include <stdlib.h>
#include <string.h>

#include <string>
#include <vector>

namespace Jsp
{
	// ---------------------------------------------------
	// ---------------------------------------------------
	class StringArray
	{
	public:
		// -----------------------------------------
		// -----------------------------------------
		StringArray();

		// -----------------------------------------
		// -----------------------------------------
		~StringArray();

		// -----------------------------------------
		///
		// -----------------------------------------
		void clear();

		// -----------------------------------------
		///
		// -----------------------------------------
		void add(const std::string &str);

		// --------------------------------------------------
		///
		// --------------------------------------------------
		void add(const char *format, ...);

		// --------------------------------------------------------
		///
		// --------------------------------------------------------
		void decomp(const char *str);

		// ----------------------------------------------
		///
		// ----------------------------------------------
		int count();

		// ----------------------------------------------
		///
		///
		///
		// ----------------------------------------------
		char **getArray(bool bNeedLastNULL=false);

	private:
		std::vector<std::string> m_strings;;
		char **m_ppArray;
		int m_capacity;
		bool m_bStringsUpdated;

		// ----------------------------------------------
		///
		// ----------------------------------------------
		void allocArray(int nStrings);

		// ----------------------------------------------
		// ----------------------------------------------
		void freeArray();
	};
};

#endif

