#ifndef _JSP_SOCKET_H_
#define _JSP_SOCKET_H_

#include "JspPacket.h"
#include <string>

namespace Jsp
{
	// ----------------------------------------------------
	// ----------------------------------------------------
	class Socket
	{
	public:
		// ----------------------------------------------------
		// ----------------------------------------------------
		Socket();

		// ----------------------------------------------------
		// ----------------------------------------------------
		~Socket();

		// ----------------------------------------------------
		///
		///
		// ----------------------------------------------------
		bool connect(const char *hostname, int port);

		// ----------------------------------------------------
		///
		///
		// ----------------------------------------------------
		bool bind(int port);

		// ----------------------------------------------------
		///
		///
		// ----------------------------------------------------
		bool accept(Jsp::Socket &newSock, std::string &hostName);

		// ----------------------------------------------------
		// ----------------------------------------------------
		void close();

		// ----------------------------------------------------
		///
		// ----------------------------------------------------
		int socket() { return m_sock; }

		// ----------------------------------------------------
		///
		// ----------------------------------------------------
		bool connected() { return (m_sock < 0) ? false : true; }

		// ----------------------------------------------------
		///
		///
		// ----------------------------------------------------
		int sendData(char *p, int len);

		// ----------------------------------------------------
		///
		///
		// ----------------------------------------------------
		int recvData(char *p, int bufLen, int &recvLen);

		// ----------------------------------------------------
		///
		///
		// ----------------------------------------------------
		bool sendWaveFile(const char *waveFile);

		// ----------------------------------------------------
		///
		///
		///
		///
		// ----------------------------------------------------
		char *getTextData(char *buf, int buflen);

		// ----------------------------------------------------
		///
		///
		///
		///
		// ----------------------------------------------------
		int recvPacket(Jsp::Packet **ppPacket);

	private:
		int m_sock;
	};
};

#endif

